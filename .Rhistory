cmt[c("Group",
"Total.Mathematics.Avg.Scale.Score",
"Total.Reading.Average.Scale.Score")],
by.x = "NAME10_1",
by.y = "Group",
all.x = T)
#Create data table using all LAI variables
oppdata3 <- merge(variables,
eai,
by.x = "geo",
by.y = "tract",
all.x = T)
oppdata3 <- merge(oppdata3,
cmt[c("Group",
"Total.Mathematics.Avg.Scale.Score",
"Total.Reading.Average.Scale.Score")],
by.x = "NAME10_1",
by.y = "Group",
all.x = T)
#Create data table using all LAI variables
oppdata4 <- merge(oppdata1,
eai,
by.x = "geo",
by.y = "tract",
all.x = T)
#Calculate z-scores and index values for each data table
oppdata1[3:12] <- scale(oppdata1[3:12], center = T, scale = T)
oppdata1$index = rowMeans(oppdata1[3:12], na.rm = T)
oppdata2[3:12] <- scale(oppdata2[3:12], center = T, scale = T)
oppdata2$index = rowMeans(oppdata2[3:12], na.rm = T)
oppdata3[3:13] <- scale(oppdata3[3:13], center = T, scale = T)
oppdata3$index = rowMeans(oppdata3[3:13], na.rm = T)
oppdata4[3:14] <- scale(oppdata4[3:14], center = T, scale = T)
oppdata4$index = rowMeans(oppdata4[3:14], na.rm = T)
names(variables)
variables <- merge(variables,
eai,
by.x = "geo",
by.y = "tract",
all.x = T)
names(variables)
oppdata <- variables
oppdata[3:14] <- scale(oppdata[3:14], center = T, scale = T)
rm(oppdata1, oppdata2)
rm(oppdata4, oppdata3)
oppdata$index = rowMeans(oppdata1[c("college","poverty")], na.rm = T)
oppdata$index = rowMeans(oppdata[c("college","poverty")], na.rm = T)
oppdata$index = rowMeans(oppdata[c("college",
"poverty",
"publicassistance",
"unemployment",
"owneroccupied",
"commutetime",
"vacancy",
"jobchange",
"Total.Mathematics.Avg.Scale.Score",
"Total.Reading.Average.Scale.Score",
"employment_access_index",
"job_diversity_index")], na.rm = T)
oppdata <- variables
oppdata[3:14] <- scale(oppdata[3:14], center = T, scale = T)
oppdata$index = rowMeans(oppdata[c("college",
"poverty",
"publicassistance",
"unemployment",
"owneroccupied",
"commutetime",
"vacancy",
"jobchange",
"Total.Mathematics.Avg.Scale.Score",
"Total.Reading.Average.Scale.Score",
"employment_access_index",
"job_diversity_index")], na.rm = T)
#Make a map of the index
library(classInt)
choropleth=merge(CTTracts, oppdata[c("geo","index")],
by.x = "id", by.y="geo")
choropleth=choropleth[order(choropleth$order), ]
breaks <- classIntervals(oppdata$index, n=5, style="quantile")
choropleth$index=cut(choropleth$index,
breaks=breaks$brks,
include.lowest=T, dig.lab = T)
#Make the map
win.metafile("Updated-no-commute.emf", width = 10, pointsize = 9)
ggplot(data = choropleth, aes(long, lat, group = group)) +
geom_polygon(aes(fill = index)) +
geom_path(data = CTTracts, aes(x = long, y = lat, group = group),colour = "lightgrey", alpha = 0.2, size = 0.05) +
scale_x_continuous(breaks = NULL) +
scale_y_continuous(breaks = NULL) +
labs(x = NULL, y = NULL, title = "Opportunity index: access + diversity - commute time") +
coord_equal() +
scale_fill_brewer(palette = "Purples", name = "Opportunty index\n(quintiles)") +
theme_minimal(base_size = 14)
dev.off()
oppdata$index = rowMeans(oppdata[c("college",
"poverty",
"publicassistance",
"unemployment",
"owneroccupied",
#                                   "commutetime",
"vacancy",
"jobchange",
"Total.Mathematics.Avg.Scale.Score",
"Total.Reading.Average.Scale.Score",
"employment_access_index",
"job_diversity_index")], na.rm = T)
#Make a map of the index
library(classInt)
choropleth=merge(CTTracts, oppdata[c("geo","index")],
by.x = "id", by.y="geo")
choropleth=choropleth[order(choropleth$order), ]
breaks <- classIntervals(oppdata$index, n=5, style="quantile")
choropleth$index=cut(choropleth$index,
breaks=breaks$brks,
include.lowest=T, dig.lab = T)
#Make the map
win.metafile("Updated-no-commute.emf", width = 10, pointsize = 9)
ggplot(data = choropleth, aes(long, lat, group = group)) +
geom_polygon(aes(fill = index)) +
geom_path(data = CTTracts, aes(x = long, y = lat, group = group),colour = "lightgrey", alpha = 0.2, size = 0.05) +
scale_x_continuous(breaks = NULL) +
scale_y_continuous(breaks = NULL) +
labs(x = NULL, y = NULL, title = "Opportunity index: access + diversity - commute time") +
coord_equal() +
scale_fill_brewer(palette = "Purples", name = "Opportunty index\n(quintiles)") +
theme_minimal(base_size = 14)
dev.off()
#Calculate z-scores and index values for each data table
oppdata <- variables
oppdata[3:14] <- scale(oppdata[3:14], center = T, scale = T)
oppdata$index = rowMeans(oppdata[c("college",
"poverty",
"publicassistance",
"unemployment",
"owneroccupied",
"commutetime",
"vacancy",
"jobchange",
"Total.Mathematics.Avg.Scale.Score",
"Total.Reading.Average.Scale.Score")], na.rm = T)
#Make a map of the index
library(classInt)
choropleth=merge(CTTracts, oppdata[c("geo","index")],
by.x = "id", by.y="geo")
choropleth=choropleth[order(choropleth$order), ]
breaks <- classIntervals(oppdata$index, n=5, style="quantile")
choropleth$index=cut(choropleth$index,
breaks=breaks$brks,
include.lowest=T, dig.lab = T)
#Make the map
win.metafile("Original-w-commute.emf", width = 10, pointsize = 9)
ggplot(data = choropleth, aes(long, lat, group = group)) +
geom_polygon(aes(fill = index)) +
geom_path(data = CTTracts, aes(x = long, y = lat, group = group),colour = "lightgrey", alpha = 0.2, size = 0.05) +
scale_x_continuous(breaks = NULL) +
scale_y_continuous(breaks = NULL) +
labs(x = NULL, y = NULL, title = "Opportunity index: original Kirwan variables") +
coord_equal() +
scale_fill_brewer(palette = "Purples", name = "Opportunty index\n(quintiles)") +
theme_minimal(base_size = 14)
dev.off()
#Now recalculate w/out commute time
oppdata2 <- oppdata
oppdata2$index = rowMeans(oppdata2[c("college",
"poverty",
"publicassistance",
"unemployment",
"owneroccupied",
#                                   "commutetime",
"vacancy",
"jobchange",
"Total.Mathematics.Avg.Scale.Score",
"Total.Reading.Average.Scale.Score",
"employment_access_index",
"job_diversity_index")], na.rm = T)
#Make a map of the second index table
library(classInt)
choropleth=merge(CTTracts, oppdata[c("geo","index")],
by.x = "id", by.y="geo")
choropleth=choropleth[order(choropleth$order), ]
breaks <- classIntervals(oppdata$index, n=5, style="quantile")
choropleth$index=cut(choropleth$index,
breaks=breaks$brks,
include.lowest=T, dig.lab = T)
#Make the map
win.metafile("Updated-no-commute.emf", width = 10, pointsize = 9)
ggplot(data = choropleth, aes(long, lat, group = group)) +
geom_polygon(aes(fill = index)) +
geom_path(data = CTTracts, aes(x = long, y = lat, group = group),colour = "lightgrey", alpha = 0.2, size = 0.05) +
scale_x_continuous(breaks = NULL) +
scale_y_continuous(breaks = NULL) +
labs(x = NULL, y = NULL, title = "Opportunity index: access + diversity - commute time") +
coord_equal() +
scale_fill_brewer(palette = "Purples", name = "Opportunty index\n(quintiles)") +
theme_minimal(base_size = 14)
dev.off()
#Find diff between original and updated methods
diff <- merge(oppdata, oppdata2, by = "geo")
diff$diff = diff$index.x- diff$index.y
#Make a map of the differences
choropleth=merge(CTTracts, diff[c("geo","diff")],
by.x = "id", by.y="geo")
choropleth=choropleth[order(choropleth$order), ]
breaks <- classIntervals(diff$diff, n=5, style="quantile")
choropleth$diff=cut(choropleth$diff,
breaks=breaks$brks,
include.lowest=T, dig.lab = T)
#Make the map
win.metafile("Difference-in-results.emf", width = 10, pointsize = 9)
ggplot(data = choropleth, aes(long, lat, group = group)) +
geom_polygon(aes(fill = diff)) +
geom_path(data = CTTracts, aes(x = long, y = lat, group = group),colour = "lightgrey", alpha = 0.2, size = 0.05) +
scale_x_continuous(breaks = NULL) +
scale_y_continuous(breaks = NULL) +
labs(x = NULL, y = NULL, title = "Difference in index values between original and new option") +
coord_equal() +
scale_fill_brewer(palette = "Purples", name = "Difference in index\n(quintiles)") +
theme_minimal(base_size = 14)
dev.off()
head(oppdata)
head(oppdata2)
head(oppdata$index)
head(oppdata2$index)
#Make a map of the second index table
library(classInt)
choropleth=merge(CTTracts, oppdata2[c("geo","index")],
by.x = "id", by.y="geo")
choropleth=choropleth[order(choropleth$order), ]
breaks <- classIntervals(oppdata2$index, n=5, style="quantile")
choropleth$index=cut(choropleth$index,
breaks=breaks$brks,
include.lowest=T, dig.lab = T)
#Make the map
win.metafile("Updated-no-commute.emf", width = 10, pointsize = 9)
ggplot(data = choropleth, aes(long, lat, group = group)) +
geom_polygon(aes(fill = index)) +
geom_path(data = CTTracts, aes(x = long, y = lat, group = group),colour = "lightgrey", alpha = 0.2, size = 0.05) +
scale_x_continuous(breaks = NULL) +
scale_y_continuous(breaks = NULL) +
labs(x = NULL, y = NULL, title = "Opportunity index: access + diversity - commute time") +
coord_equal() +
scale_fill_brewer(palette = "Purples", name = "Opportunty index\n(quintiles)") +
theme_minimal(base_size = 14)
dev.off()
names(variables)
names(oppdata)
names(oppdata2)
x <- subset(oppdata[3:12], commutetime != "NA" &
Total.Mathematics.Avg.Scale.Score != "NA" &
Total.Reading.Average.Scale.Score != "NA" &
jobchange != "NA")
pca1 = prcomp(x, scale. = T)
rotation <- data.frame(pca1$rotation[,1])
weights1 <-
ggplot(data = rotation, aes(x = pca1.rotation...1., y = row.names(rotation))) +
geom_point() +
xlim(-0.4,0.3) +
labs(x = "Weight in first principal component", y = NULL, title = "Original")
y <- subset(oppdata2[c(3:7,8:14)],
Total.Mathematics.Avg.Scale.Score != "NA" &
Total.Reading.Average.Scale.Score != "NA" & jobchange != "NA")
pca2 = prcomp(y, scale. = T)
rotation2 <- data.frame(pca2$rotation[,1])
weights2 <-
ggplot(data = rotation2, aes(x = pca2.rotation...1., y = row.names(rotation2))) +
geom_point() +
xlim(-0.4,0.3) +
labs(x = "Weight in first principal component", y = NULL, title = "With job growth + access + diversity")
library(gridExtra)
win.metafile("Principal-components.emf", width = 10, pointsize = 9)
grid.arrange(weights1, weights2, ncol = 1, nrow = 2)
dev.off()
y <- subset(oppdata2[c(3:7,8:14)],
Total.Mathematics.Avg.Scale.Score != "NA" &
Total.Reading.Average.Scale.Score != "NA" & jobchange != "NA")
summary(y)
y <- subset(oppdata2[c(3:7,8:14)], commutetime != "NA" &
Total.Mathematics.Avg.Scale.Score != "NA" &
Total.Reading.Average.Scale.Score != "NA" & jobchange != "NA")
pca2 = prcomp(y, scale. = T)
rotation2 <- data.frame(pca2$rotation[,1])
weights2 <-
ggplot(data = rotation2, aes(x = pca2.rotation...1., y = row.names(rotation2))) +
geom_point() +
xlim(-0.4,0.3) +
labs(x = "Weight in first principal component", y = NULL, title = "With job growth + access + diversity")
library(gridExtra)
win.metafile("Principal-components.emf", width = 10, pointsize = 9)
grid.arrange(weights1, weights2, ncol = 1, nrow = 2)
dev.off()
names(y)
oppdata2[c(3:7,8:14)]
names(oppdata2[c(3:7,8:14)])
y <- subset(oppdata2[c(3:7,9:14)], commutetime != "NA" &
Total.Mathematics.Avg.Scale.Score != "NA" &
Total.Reading.Average.Scale.Score != "NA" & jobchange != "NA")
pca2 = prcomp(y, scale. = T)
rotation2 <- data.frame(pca2$rotation[,1])
weights2 <-
ggplot(data = rotation2, aes(x = pca2.rotation...1., y = row.names(rotation2))) +
geom_point() +
xlim(-0.4,0.3) +
labs(x = "Weight in first principal component", y = NULL, title = "With job growth + access + diversity")
library(gridExtra)
win.metafile("Principal-components.emf", width = 10, pointsize = 9)
grid.arrange(weights1, weights2, ncol = 1, nrow = 2)
dev.off()
names(y)
names(oppdata2)
oppdata2[8]
head(oppdata2[8])
oppdata2[c(3:7,9:14)]
head(oppdata2[c(3:7,9:14)])
names(oppdata2[c(3:7,9:14)])
y <- subset(oppdata2[c(3:7,9:14)], commutetime != "NA" &
Total.Mathematics.Avg.Scale.Score != "NA" &
Total.Reading.Average.Scale.Score != "NA" & jobchange != "NA")
y <- subset(oppdata2[c(3:7,9:14)], vacancy != "NA" &
Total.Mathematics.Avg.Scale.Score != "NA" &
Total.Reading.Average.Scale.Score != "NA" & jobchange != "NA")
pca2 = prcomp(y, scale. = T)
summary(y)
y <- subset(oppdata2[c(3:7,9:14)], poverty != "NA" &
Total.Mathematics.Avg.Scale.Score != "NA" &
Total.Reading.Average.Scale.Score != "NA" & jobchange != "NA")
pca2 = prcomp(y, scale. = T)
summary(y)
y <- subset(oppdata2[c(3:7,9:14)], poverty != "NA" &
Total.Mathematics.Avg.Scale.Score != "NA" &
Total.Reading.Average.Scale.Score != "NA" & jobchange != "NA" &
job_diversity_index != "NA")
pca2 = prcomp(y, scale. = T)
summary(y)
y <- subset(oppdata2[c(3:7,9:14)], poverty != "NA" &
Total.Mathematics.Avg.Scale.Score != "NA" &
Total.Reading.Average.Scale.Score != "NA" & jobchange != "NA" &
job_diversity_index != "NA")
summary(y)
y <- subset(oppdata2[c(3:7,9:14)], poverty != "NA" & unemployemt != "NA" &
Total.Mathematics.Avg.Scale.Score != "NA" &
Total.Reading.Average.Scale.Score != "NA" & jobchange != "NA" &
job_diversity_index != "NA")
y <- subset(oppdata2[c(3:7,9:14)], poverty != "NA" & unemployment != "NA" &
Total.Mathematics.Avg.Scale.Score != "NA" &
Total.Reading.Average.Scale.Score != "NA" & jobchange != "NA" &
job_diversity_index != "NA")
summary(y)
y <- subset(oppdata2[c(3:7,9:14)], poverty != "NA" | unemployment != "NA" |
Total.Mathematics.Avg.Scale.Score != "NA" &
Total.Reading.Average.Scale.Score != "NA" & jobchange != "NA" &
job_diversity_index != "NA")
summary(y)
y <- subset(oppdata2[c(3:7,9:14)], poverty != "NA" |
Total.Mathematics.Avg.Scale.Score != "NA" |
Total.Reading.Average.Scale.Score != "NA" | jobchange != "NA" &
job_diversity_index != "NA")
summary(y)
y <- subset(oppdata2[c(3:7,9:14)], poverty != "NA" &
unemployment != "NA" &
Total.Mathematics.Avg.Scale.Score != "NA" &
Total.Reading.Average.Scale.Score != "NA" &
jobchange != "NA" &
job_diversity_index != "NA")
summary(y)
y <- subset(oppdata2[c(3:7,9:14)], poverty != "NA" &
owneroccupied != "NA" &
Total.Mathematics.Avg.Scale.Score != "NA" &
Total.Reading.Average.Scale.Score != "NA" &
jobchange != "NA" &
job_diversity_index != "NA")
summary(y)
y <- subset(oppdata2[3:14], commutetime != "NA" &
Total.Mathematics.Avg.Scale.Score != "NA" &
Total.Reading.Average.Scale.Score != "NA" &
jobchange != "NA")
summary(y)
y <- subset(oppdata2[3:14], commutetime != "NA" &
Total.Mathematics.Avg.Scale.Score != "NA" &
Total.Reading.Average.Scale.Score != "NA" &
jobchange != "NA")[c(1:7,9:14)]
subset(oppdata2[3:14], commutetime != "NA" &
Total.Mathematics.Avg.Scale.Score != "NA" &
Total.Reading.Average.Scale.Score != "NA" &
jobchange != "NA")
names(subset(oppdata2[3:14], commutetime != "NA" &
Total.Mathematics.Avg.Scale.Score != "NA" &
Total.Reading.Average.Scale.Score != "NA" &
jobchange != "NA"))
y <- subset(oppdata2[3:14], commutetime != "NA" &
Total.Mathematics.Avg.Scale.Score != "NA" &
Total.Reading.Average.Scale.Score != "NA" &
jobchange != "NA")[c(1:5,7:12)]
pca2 = prcomp(y, scale. = T)
rotation2 <- data.frame(pca2$rotation[,1])
weights2 <-
ggplot(data = rotation2, aes(x = pca2.rotation...1., y = row.names(rotation2))) +
geom_point() +
xlim(-0.4,0.3) +
labs(x = "Weight in first principal component", y = NULL, title = "With job growth + access + diversity")
library(gridExtra)
win.metafile("Principal-components.emf", width = 10, pointsize = 9)
grid.arrange(weights1, weights2, ncol = 1, nrow = 2)
dev.off()
write.csv(variables, variables.csv, row.names = F)
write.csv(oppdata2, index-values.csv, row.names = F)
write.csv(variables, "variables.csv", row.names = F)
write.csv(oppdata2, "index-values.csv", row.names = F)
#Load all the libraries and census data
library(ggplot2)
library(reshape)
library(plyr)
library(acs)
library(maps)
library(maptools)
require(slidify)
slidify('index.Rmd')
names(variables)
slidify('index.Rmd')
slidify('index.Rmd')
slidify('index.Rmd')
slidify('index.Rmd')
slidify('index.Rmd')
slidify('index.Rmd')
slidify('index.Rmd')
slidify('index.Rmd')
slidify('index.Rmd')
head(choropleth)
choropleth=merge(CTTracts, variables, by.x = "id", by.y="geo")
choropleth=choropleth[order(choropleth$order), ]
head(choropleth)
for(i in 1:1) {
tmp <- names(variables)
breaks <- classIntervals(variables[[tmp[i+7]]], n=5, style="quantile")
choropleth[[tmp[i+7]]]=cut(choropleth[[tmp[i+7]]],
breaks=breaks$brks,
include.lowest=T, dig.lab = T)
#Make the map
ggplot(data = choropleth, aes(long, lat, group = group)) +
geom_polygon(aes(fill = choropleth[[tmp[i+7]]])) +
scale_x_continuous(breaks = NULL) +
scale_y_continuous(breaks = NULL) +
labs(x = NULL, y = NULL, title = tmp[i+7]) +
coord_equal() +
scale_fill_brewer(palette = "Purples", name = "Values") +
theme_minimal()
}
slidify('index.Rmd')
slidify('index.Rmd')
length(variables)
slidify('index.Rmd')
vnames
slidify('index.Rmd')
slidify('index.Rmd')
vnames[2]
vnames[0]
vnames[1]
slidify('index.Rmd')
ggplot(data = variables) +
geom_density(aes(x = variables[[tmp[6]]]))
slidify('index.Rmd')
slidify('index.Rmd')
slidify('index.Rmd')
slidify('index.Rmd')
slidify('index.Rmd')
slidify('index.Rmd')
slidify('index.Rmd')
slidify('index.Rmd')
slidify('index.Rmd')
slidify('index.Rmd')
slidify('index.Rmd')
require(slidify)
subset(oppdata[3:13],
Total.Mathematics.Avg.Scale.Score != "NA" &
Total.Reading.Average.Scale.Score != "NA" &
jobchange != "NA")
rm(oppdata2)
x <- subset(oppdata[3:13],
Total.Mathematics.Avg.Scale.Score != "NA" &
Total.Reading.Average.Scale.Score != "NA" &
jobchange != "NA")
print(xtable(round(cor(x),2)), type = "html")
round(cor(x),2)
cor(oppdata[3:13], na.rm = T)
cor(x, na.rm = T)
cor(x, use = na.or.complete)
cor(x, use = "na.or.complete")
rm(x)
rm(y)
rm(z)
print(xtable(round(cor(x, use = "na.or.complete"),2)), type = "html")
library(xtable)
print(xtable(round(cor(x, use = "na.or.complete"),2)), type = "html")
print(xtable(round(cor(oppdata[3:13], use = "na.or.complete"),2)), type = "html")
print(xtable(round(cor(oppdata[3:14], use = "na.or.complete"),2)), type = "html")
prcomp(oppdata[3:14], scale. = T)
prcomp(oppdata[3:14], scale. = T, na.action = "na.omit")
require(slidify)
slidify('index.Rmd')
pca1 = prcomp(na.omit(oppdata[3:14]), scale. = T)
rm(x)
pca1 = prcomp(na.omit(oppdata[3:14]), scale. = T)
print(summary(pca1))
plot(prcomp(na.omit(oppdata[3:14]), scale = T))
plot(prcomp(na.omit(oppdata[3:14]), scale = T), title = "Principal components")
plot(prcomp(na.omit(oppdata[3:14]), scale = T), main = "Principal components")
print(summary(pca1))
rotation <- data.frame(pca1$rotation[,1])
qplot(data = rotation, x = pca1.rotation...1., y = row.names(rotation)) +
labs(x = "Weight in first principal component", y = NULL)
lm(oppdata$poverty ~ oppdata$index)
summary(lm(oppdata$index ~ oppdata$poverty))
slidify('index.Rmd')
